
#include <iostream>
#include <vector>
#include <queue>
#include <string>
#include <unordered_map>
#include <sstream>
#include <set>
#include <stack>

using namespace std;

struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;
    TreeNode() : val(0), left(nullptr), right(nullptr) {}
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
    TreeNode(int x, TreeNode* left, TreeNode* right) : val(x), left(left), right(right) {}
};

class Solution {
public:
    TreeNode* recoverFromPreorder(string traversal) {
        if (traversal.empty())
            return NULL;

        int v;
        stringstream ss(traversal);
        ss >> v;

        stack<TreeNode*> nodes;

        TreeNode* rs = new TreeNode(v);
        nodes.push(rs);

        int p = to_string(v).length();
        char c;
        int dashes = 0;
        while (p < traversal.length())
        {
            if (traversal[p] == '-') {
                dashes++;
                p++;
                ss >> c;
            }
            else {
                ss >> v;
                TreeNode* node = new TreeNode(v);

                // pop all nodes from stack until meeting the parent node (size of stack = level of node)
                while (nodes.size() > dashes)
                {
                    nodes.pop();
                }
                TreeNode* parent = nodes.top();
                if (parent->left)
                    parent->right = node;
                else
                    parent->left = node;
                nodes.push(node);

                dashes = 0;
                p += to_string(v).length();
            }
        }

        return rs;
    }
};

int main()
{
    Solution sln;
    //cout << sln << endl;
    //sln.recoverFromPreorder
    
    sln.recoverFromPreorder("1-2--3--4-5--6--7");


    return 0;
}
